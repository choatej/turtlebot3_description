name: Create Release
on:
  workflow_dispatch:
    inputs:
        tag:
            description: 'Tag to create release for'
            required: true
            default: 'v0.0.0'
  push:
    tags:
      - 'v*.*.*'

jobs:
  get_tag:
    outputs:
        tag: ${{ steps.get_tag.outputs.tag }}
    runs-on: ubuntu-latest
    steps:
      - name: Get the tag
        id: get_tag
        run: |
          if [[ "$GITHUB_REF" == refs/tags/* ]]; then
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "tag=v0.0.0" >> $GITHUB_OUTPUT
          fi
  generate_urdf:
    runs-on: ubuntu-latest
    container: ros:iron
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        path: src
    - name: install dependencies
      run:  sudo apt-get update && rosdep update && rosdep install --from-paths src -r -y
#      run: |
#        sudo apt-get update && \
#        sudo apt-get install -y \
#          ros-iron-xacro
    - name: Generate URDF files
      run: |
        colcon build --packages-select turtlebot3_description
        xacro urdf/turtlebot3_burger_urdf.xacro -o turtlebot3.urdf
        tar -czvf turtlebot3_urdf.tar.gz install/turtlebot3_description/
    - name: Upload URDF artifact
      uses: actions/upload-artifact@v4
      with:
        name: turtlebot3_urdf
        path: turtlebot3_urdf.tar.gz

  build_docker:
    runs-on: ubuntu-latest
    needs: [get_tag]
    env:
      tag: ${{ needs.get_tag.outputs.tag }}
      image_name: ${{ github.repository }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Build Docker image
      run: |
        docker build -t ${image_name}:${tag} -f ./docker/Dockerfile .
    - name: Save Docker image as tar
      run: |
        outfile=$(echo ${image_name} | tr '/' '-')
        docker save ${image_name}:${tag} -o ${outfile}-${tag}.tar

    - name: Upload Docker image tar artifact
      uses: actions/upload-artifact@v4
      with:
        name: docker_image
        path: ${image_name}_${tag}.tar

  create_release:
    runs-on: ubuntu-latest
    needs: [get_tag, generate_urdf, build_docker]
    env:
        tag: ${{ needs.get_tag.outputs.tag }}
        image_name: ${{ github.repository }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Download URDF artifact
      uses: actions/download-artifact@v4
      with:
        name: turtlebot3_urdf
    - name: Download Docker image artifact
      uses: actions/download-artifact@v4
      with:
        name: docker_image
    - name: Archive source code
      run: |
        git archive --format=tar.gz --output=source_code_${tag}.tar.gz ${tag}
    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          turtlebot3_urdf.tar.gz
          source_code_${tag}.tar.gz
          ${image-name}_${tag}.tar
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
